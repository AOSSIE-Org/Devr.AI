[project]
name = "devr-ai"
version = "0.1.0"
description = "Devr.AI is an AI-powered Developer Relations (DevRel) assistant designed to seamlessly integrate with open-source communities across platforms like Discord, Slack, GitHub, and Discourse."
authors = [{ name = "Kartik Bhatt", email = "kartikbhtt7@gmail.com" }]
readme = "README.md"
requires-python = ">=3.10,<3.14"
dependencies = [
    "supabase (>=2.13.0,<3.0.0)",
    "fastapi (>=0.115.11,<0.116.0)",
    "py-cord (>=2.6.1,<3.0.0)",
    "pygithub (>=2.6.1,<3.0.0)",
    "slack-sdk (>=3.34.0,<4.0.0)",
    "sentence-transformers (>=3.4.1,<4.0.0)",
    "torch (>=2.6.0,<3.0.0)",
    "pydantic (>=2.10.6,<3.0.0)",
    "langgraph (>=0.4.7,<0.5.0)",
    "langchain-tavily (>=0.2.0,<0.3.0)",
    "tavily-python (>=0.7.3,<0.8.0)",
    "pydantic-settings (>=2.9.1,<3.0.0)",
    "langsmith (>=0.3.45,<0.4.0)",
    "weaviate-client (>=4.15.0,<5.0.0)",
    "langchain-google-genai (>=2.1.5,<3.0.0)",
    "python-dotenv (>=1.1.1,<2.0.0)",
    "aio-pika (>=9.5.5,<10.0.0)",
    "uvicorn (>=0.38.0,<0.39.0)",
    "ddgs (>=9.0.2,<10.0.0)",
    "fastmcp>=2.11.3,<3.0.0",
    "discord-py (>=2.4.0,<2.5.0)",
    "graphrag-sdk (>=0.8.1,<0.9.0)",
    "tree-sitter (>=0.25.2,<0.26.0)",
    "validators (>=0.35.0,<0.36.0)",
    "falkordb (>=1.2.0,<2.0.0)",
    "tree-sitter-c (>=0.24.1,<0.25.0)",
    "tree-sitter-python (>=0.25.0,<0.26.0)",
    "tree-sitter-java (>=0.23.5,<0.24.0)",
    "flask (>=3.1.2,<4.0.0)",
    "multilspy @ git+https://github.com/AviAvni/multilspy.git@python-init-params",
    "javatools (>=1.6.0,<2.0.0)",
    "pygit2 (>=1.18.2,<2.0.0)",
    "toml (>=0.10.2,<0.11.0)",
    "websockets (>=15.0.1,<16.0.0)",
]

[tool.poetry]
packages = [{ include = "devr" }]
package-mode = false

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
pytest-asyncio = "^0.25.0"
pytest-mock = "^3.15.0"
flake8 = "^7.1.2"
black = "^24.0.0"
isort = "^5.13.2"
mypy = "^1.15.0"
safety = "^4.0.0"
bandit = "^1.8.0"
autopep8 = "^2.3.2"
autoflake = "^2.3.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# =============================================================================
# DEVELOPMENT TOOLS CONFIGURATION
# =============================================================================

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["backend/app"]
branch = true
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/migrations/*",
    "*/test_*.py",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
show_missing = true
skip_covered = false
precision = 2

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*"]

[tool.flake8]
max-line-length = 100
select = ["E", "W", "F", "C", "N"]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
    "C901",  # too complex (we'll handle this separately)
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".tox",
    ".mypy_cache",
    "migrations"
]
per-file-ignores = [
    "__init__.py:F401",  # imported but unused
    "test_*.py:S101",    # use of assert
]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "supabase.*",
    "weaviate.*",
    "discord.*",
    "aio_pika.*",
    "langgraph.*",
    "langchain_google_genai.*",
    "tavily_python.*"
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101"]  # Skip assert_used test
