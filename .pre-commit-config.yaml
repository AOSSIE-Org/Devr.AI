# Pre-commit hooks configuration for Devr.AI
# Install with: pip install pre-commit && pre-commit install

repos:
  # ============================================================================
  # GENERAL CODE QUALITY
  # ============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']  # Allow %%GITHUB_TOKEN%% in workflows
      - id: check-toml
      - id: check-json
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: debug-statements
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ['--fix=lf']

  # ============================================================================
  # PYTHON CODE QUALITY
  # ============================================================================
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        name: Format Python code (black)
        files: ^backend/
        language_version: python3

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort Python imports (isort)
        files: ^backend/
        args: ["--profile", "black", "--line-length", "100"]

  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        name: Lint Python code (flake8)
        files: ^backend/
        args: ["--max-line-length=100", "--extend-ignore=E203,W503"]
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions

  - repo: https://github.com/pycqa/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        name: Remove unused imports (autoflake)
        files: ^backend/
        args:
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --in-place

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.15.0
    hooks:
      - id: mypy
        name: Type checking (mypy)
        files: ^backend/
        args: ["--ignore-missing-imports", "--check-untyped-defs"]
        additional_dependencies:
          - types-requests
          - types-PyYAML

  # ============================================================================
  # PYTHON SECURITY
  # ============================================================================
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        name: Security linting (bandit)
        files: ^backend/
        args: ["-r", "-x", "tests/", "-f", "json"]
        exclude: ^backend/tests/

  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        name: Check for known security vulnerabilities (safety)
        files: ^backend/
        args: ["--json"]

  # ============================================================================
  # FRONTEND CODE QUALITY  
  # ============================================================================
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.17.0
    hooks:
      - id: eslint
        name: Lint TypeScript/JavaScript (ESLint)
        files: ^frontend/.*\.(js|jsx|ts|tsx)$
        args: ["--fix", "--max-warnings=0"]
        additional_dependencies:
          - eslint@^9.9.1
          - "@typescript-eslint/parser@^8.3.0"
          - "@typescript-eslint/eslint-plugin@^8.3.0"

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: Format frontend code (Prettier)
        files: ^frontend/.*\.(js|jsx|ts|tsx|json|css|md)$
        exclude: ^frontend/package-lock\.json$

  # ============================================================================
  # DOCKER & YAML
  # ============================================================================
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.0
    hooks:
      - id: yamllint
        name: Lint YAML files
        args: [-c=.yamllint.yml]

  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: Lint Dockerfiles
        files: .*Dockerfile.*

  # ============================================================================
  # DOCUMENTATION & MARKDOWN
  # ============================================================================
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.42.0
    hooks:
      - id: markdownlint
        name: Lint Markdown files
        args: ["--fix"]
        exclude: ^CHANGELOG\.md$

  # ============================================================================
  # SECRETS & SECURITY
  # ============================================================================
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: Detect secrets and credentials
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock\.json|poetry\.lock

  # ============================================================================
  # COMMIT MESSAGE FORMAT
  # ============================================================================
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.6.0
    hooks:
      - id: conventional-pre-commit
        name: Check commit message format
        stages: [commit-msg]
        args: [optional-scope, feat, fix, docs, style, refactor, perf, test, chore, ci, build]

# CI-specific configurations
ci:
  autofix_commit_msg: |
    üîß [pre-commit.ci] auto fixes from pre-commit hooks
    
    Applied automatic fixes for code quality issues.
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '‚¨ÜÔ∏è [pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
